services:
  explorer-backend:
    restart: unless-stopped
    depends_on:
      - redis
    build:
      context: .
      args:
        - GIT_BRANCH=${GIT_BRANCH}
    ports:
      - '3000:3000'
    depends_on:
      prisma-migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
    deploy:
      resources:
        limits:
          memory: 4096M
    networks:
      - internal

  prisma-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/explorer
    command:
      [
        'sh',
        '-c',
        'cd /app/backend && pnpm install && npx prisma migrate deploy && npx prisma generate && npx prisma db seed',
      ]
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    networks:
      - internal

  redis:
    # https://github.com/docker-library/redis/blob/b77450d/7.4/alpine/Dockerfile
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '127.0.0.1:6379:6379'
    command: /usr/local/etc/redis/redis.conf
    volumes:
      # Redis' WORKDIR is /data
      - redis-data:/data
      - ./backend/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - internal

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  redis-data:
  postgres_volume:

networks:
  internal:
    driver: bridge
